[gd_scene load_steps=4 format=3 uid="uid://jyxkmjclblfm"]

[sub_resource type="GDScript" id="GDScript_bdg0p"]
script/source = "extends CanvasLayer

signal dialogue_completed

@onready var textbox_container = $TextboxContainer
@onready var text_label = $TextboxContainer/MarginContainer/HBoxContainer/Label
@onready var start_symbol = $TextboxContainer/MarginContainer/HBoxContainer/Start
@onready var end_symbol = $TextboxContainer/MarginContainer/HBoxContainer/End

@export var text_speed: float = 0.05
@export var auto_hide: bool = true

var current_text: String = \"\"
var displayed_text: String = \"\"
var is_text_completed: bool = false
var dialogue_active: bool = false
var crab_node: Node = null

func _ready():
	textbox_container.hide()
	dialogue_active = false
	reset_dialogue_state()
	
	# Find the Crab node
	crab_node = get_parent().get_node(\"Crab\")
	
	if text_speed > 0:
		process_mode = Node.PROCESS_MODE_ALWAYS

func reset_dialogue_state():
	current_text = \"\"
	displayed_text = \"\"
	is_text_completed = false

@warning_ignore(\"unused_parameter\")
func _process(delta):
	if dialogue_active and !is_text_completed:
		if displayed_text.length() < current_text.length():
			displayed_text += current_text[displayed_text.length()]
			text_label.text = displayed_text
		else:
			is_text_completed = true

func show_dialogue(text: String):
	if text.is_empty():
		return
	current_text = text
	displayed_text = \"\"
	is_text_completed = false
	dialogue_active = true
	textbox_container.show()
	if crab_node:
		crab_node.lock_movement()
	print(\"DEBUG: Showing dialogue: \", text)

func hide_dialogue():
	dialogue_active = false
	textbox_container.hide()
	reset_dialogue_state()
	if crab_node:
		crab_node.unlock_movement()
	print(\"DEBUG: Dialogue hidden.\")
	# Emit the signal when dialogue is hidden
	dialogue_completed.emit()

func trigger_dialogue(text: String):
	show_dialogue(text)
	print(\"DEBUG: Triggered dialogue: \", text)

func complete_text():
	if !is_text_completed:
		displayed_text = current_text
		text_label.text = displayed_text
		is_text_completed = true

func advance_dialogue():
	if is_text_completed:
		hide_dialogue()  # This will emit the dialogue_completed signal
	else:
		complete_text()
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_ku1e5"]
bg_color = Color(0.242613, 0.127583, 0.0235908, 1)
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
border_color = Color(1, 1, 1, 1)

[sub_resource type="SystemFont" id="SystemFont_nqged"]
font_names = PackedStringArray("Comic Sans MS")
font_weight = 625
subpixel_positioning = 0

[node name="Dialogue" type="CanvasLayer"]
script = SubResource("GDScript_bdg0p")

[node name="TextboxContainer" type="MarginContainer" parent="."]
anchors_preset = 12
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = -201.0
grow_horizontal = 2
grow_vertical = 0
theme_override_constants/margin_left = 60
theme_override_constants/margin_top = 30
theme_override_constants/margin_right = 60
theme_override_constants/margin_bottom = 30

[node name="Panel" type="Panel" parent="TextboxContainer"]
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_ku1e5")

[node name="MarginContainer" type="MarginContainer" parent="TextboxContainer"]
layout_mode = 2
theme_override_constants/margin_left = 20
theme_override_constants/margin_top = 20
theme_override_constants/margin_right = 20
theme_override_constants/margin_bottom = 20

[node name="Panel" type="Panel" parent="TextboxContainer/MarginContainer"]
visible = false
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="TextboxContainer/MarginContainer"]
layout_mode = 2

[node name="Start" type="Label" parent="TextboxContainer/MarginContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 0
theme_override_fonts/font = SubResource("SystemFont_nqged")
theme_override_font_sizes/font_size = 25
text = "*"

[node name="Label" type="Label" parent="TextboxContainer/MarginContainer/HBoxContainer"]
custom_minimum_size = Vector2(2, 0)
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 0
theme_override_fonts/font = SubResource("SystemFont_nqged")
theme_override_font_sizes/font_size = 25
text = "Testing"
autowrap_mode = 2

[node name="End" type="Label" parent="TextboxContainer/MarginContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 8
size_flags_vertical = 8
theme_override_fonts/font = SubResource("SystemFont_nqged")
theme_override_font_sizes/font_size = 25
text = "*"
